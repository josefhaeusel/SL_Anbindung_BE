/*! @name videojs-marker-plugin @version 1.0.1 @license MIT */
(function (QUnit, sinon, videojs) {
	'use strict';

	QUnit = QUnit && Object.prototype.hasOwnProperty.call(QUnit, 'default') ? QUnit['default'] : QUnit;
	sinon = sinon && Object.prototype.hasOwnProperty.call(sinon, 'default') ? sinon['default'] : sinon;
	videojs = videojs && Object.prototype.hasOwnProperty.call(videojs, 'default') ? videojs['default'] : videojs;

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	var minDoc = {};

	var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal :
	    typeof window !== 'undefined' ? window : {};


	var doccy;

	if (typeof document !== 'undefined') {
	    doccy = document;
	} else {
	    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

	    if (!doccy) {
	        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
	    }
	}

	var document_1 = doccy;

	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;

	  _setPrototypeOf(subClass, superClass);
	}

	function _setPrototypeOf(o, p) {
	  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };

	  return _setPrototypeOf(o, p);
	}

	var cov_1suh96wub1 = function () {
	  var path = "C:\\Users\\abc13\\Projects\\marker-plugin\\src\\markerPoint.js",
	      hash = 'd867c39b8547f376c0ca908db1061c4cf438139a',
	      Function = function () {}.constructor,
	      global = new Function('return this')(),
	      gcv = '__coverage__',
	      coverageData = {
	    path: "C:\\Users\\abc13\\Projects\\marker-plugin\\src\\markerPoint.js",
	    statementMap: {
	      '0': {
	        start: {
	          line: 3,
	          column: 18
	        },
	        end: {
	          line: 3,
	          column: 51
	        }
	      },
	      '1': {
	        start: {
	          line: 4,
	          column: 20
	        },
	        end: {
	          line: 4,
	          column: 55
	        }
	      },
	      '2': {
	        start: {
	          line: 20,
	          column: 4
	        },
	        end: {
	          line: 20,
	          column: 27
	        }
	      },
	      '3': {
	        start: {
	          line: 22,
	          column: 4
	        },
	        end: {
	          line: 22,
	          column: 27
	        }
	      },
	      '4': {
	        start: {
	          line: 24,
	          column: 4
	        },
	        end: {
	          line: 24,
	          column: 46
	        }
	      },
	      '5': {
	        start: {
	          line: 25,
	          column: 4
	        },
	        end: {
	          line: 25,
	          column: 27
	        }
	      },
	      '6': {
	        start: {
	          line: 27,
	          column: 4
	        },
	        end: {
	          line: 27,
	          column: 35
	        }
	      },
	      '7': {
	        start: {
	          line: 28,
	          column: 4
	        },
	        end: {
	          line: 28,
	          column: 42
	        }
	      },
	      '8': {
	        start: {
	          line: 30,
	          column: 4
	        },
	        end: {
	          line: 33,
	          column: 6
	        }
	      },
	      '9': {
	        start: {
	          line: 41,
	          column: 4
	        },
	        end: {
	          line: 41,
	          column: 99
	        }
	      },
	      '10': {
	        start: {
	          line: 60,
	          column: 4
	        },
	        end: {
	          line: 60,
	          column: 27
	        }
	      },
	      '11': {
	        start: {
	          line: 62,
	          column: 4
	        },
	        end: {
	          line: 62,
	          column: 33
	        }
	      },
	      '12': {
	        start: {
	          line: 63,
	          column: 4
	        },
	        end: {
	          line: 63,
	          column: 29
	        }
	      },
	      '13': {
	        start: {
	          line: 64,
	          column: 4
	        },
	        end: {
	          line: 64,
	          column: 29
	        }
	      },
	      '14': {
	        start: {
	          line: 66,
	          column: 4
	        },
	        end: {
	          line: 69,
	          column: 7
	        }
	      },
	      '15': {
	        start: {
	          line: 70,
	          column: 4
	        },
	        end: {
	          line: 70,
	          column: 111
	        }
	      },
	      '16': {
	        start: {
	          line: 72,
	          column: 4
	        },
	        end: {
	          line: 72,
	          column: 28
	        }
	      },
	      '17': {
	        start: {
	          line: 73,
	          column: 4
	        },
	        end: {
	          line: 73,
	          column: 31
	        }
	      },
	      '18': {
	        start: {
	          line: 74,
	          column: 4
	        },
	        end: {
	          line: 78,
	          column: 7
	        }
	      },
	      '19': {
	        start: {
	          line: 75,
	          column: 6
	        },
	        end: {
	          line: 75,
	          column: 31
	        }
	      },
	      '20': {
	        start: {
	          line: 76,
	          column: 6
	        },
	        end: {
	          line: 76,
	          column: 33
	        }
	      },
	      '21': {
	        start: {
	          line: 77,
	          column: 6
	        },
	        end: {
	          line: 77,
	          column: 32
	        }
	      },
	      '22': {
	        start: {
	          line: 79,
	          column: 4
	        },
	        end: {
	          line: 82,
	          column: 7
	        }
	      },
	      '23': {
	        start: {
	          line: 80,
	          column: 6
	        },
	        end: {
	          line: 80,
	          column: 31
	        }
	      },
	      '24': {
	        start: {
	          line: 81,
	          column: 6
	        },
	        end: {
	          line: 81,
	          column: 33
	        }
	      },
	      '25': {
	        start: {
	          line: 91,
	          column: 4
	        },
	        end: {
	          line: 93,
	          column: 7
	        }
	      },
	      '26': {
	        start: {
	          line: 103,
	          column: 4
	        },
	        end: {
	          line: 103,
	          column: 39
	        }
	      },
	      '27': {
	        start: {
	          line: 104,
	          column: 4
	        },
	        end: {
	          line: 104,
	          column: 63
	        }
	      }
	    },
	    fnMap: {
	      '0': {
	        name: '(anonymous_0)',
	        decl: {
	          start: {
	            line: 19,
	            column: 2
	          },
	          end: {
	            line: 19,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 19,
	            column: 31
	          },
	          end: {
	            line: 34,
	            column: 3
	          }
	        },
	        line: 19
	      },
	      '1': {
	        name: '(anonymous_1)',
	        decl: {
	          start: {
	            line: 40,
	            column: 2
	          },
	          end: {
	            line: 40,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 40,
	            column: 19
	          },
	          end: {
	            line: 42,
	            column: 3
	          }
	        },
	        line: 40
	      },
	      '2': {
	        name: '(anonymous_2)',
	        decl: {
	          start: {
	            line: 59,
	            column: 2
	          },
	          end: {
	            line: 59,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 59,
	            column: 31
	          },
	          end: {
	            line: 83,
	            column: 3
	          }
	        },
	        line: 59
	      },
	      '3': {
	        name: '(anonymous_3)',
	        decl: {
	          start: {
	            line: 74,
	            column: 26
	          },
	          end: {
	            line: 74,
	            column: 27
	          }
	        },
	        loc: {
	          start: {
	            line: 74,
	            column: 34
	          },
	          end: {
	            line: 78,
	            column: 5
	          }
	        },
	        line: 74
	      },
	      '4': {
	        name: '(anonymous_4)',
	        decl: {
	          start: {
	            line: 79,
	            column: 26
	          },
	          end: {
	            line: 79,
	            column: 27
	          }
	        },
	        loc: {
	          start: {
	            line: 79,
	            column: 34
	          },
	          end: {
	            line: 82,
	            column: 5
	          }
	        },
	        line: 79
	      },
	      '5': {
	        name: '(anonymous_5)',
	        decl: {
	          start: {
	            line: 90,
	            column: 2
	          },
	          end: {
	            line: 90,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 90,
	            column: 13
	          },
	          end: {
	            line: 94,
	            column: 3
	          }
	        },
	        line: 90
	      },
	      '6': {
	        name: '(anonymous_6)',
	        decl: {
	          start: {
	            line: 102,
	            column: 2
	          },
	          end: {
	            line: 102,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 102,
	            column: 27
	          },
	          end: {
	            line: 105,
	            column: 3
	          }
	        },
	        line: 102
	      }
	    },
	    branchMap: {},
	    s: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0,
	      '6': 0,
	      '7': 0,
	      '8': 0,
	      '9': 0,
	      '10': 0,
	      '11': 0,
	      '12': 0,
	      '13': 0,
	      '14': 0,
	      '15': 0,
	      '16': 0,
	      '17': 0,
	      '18': 0,
	      '19': 0,
	      '20': 0,
	      '21': 0,
	      '22': 0,
	      '23': 0,
	      '24': 0,
	      '25': 0,
	      '26': 0,
	      '27': 0
	    },
	    f: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0,
	      '6': 0
	    },
	    b: {},
	    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
	  },
	      coverage = global[gcv] || (global[gcv] = {});

	  if (coverage[path] && coverage[path].hash === hash) {
	    return coverage[path];
	  }

	  coverageData.hash = hash;
	  return coverage[path] = coverageData;
	}();
	var Component = (cov_1suh96wub1.s[0]++, videojs.getComponent('Component'));
	var TimeTooltip = (cov_1suh96wub1.s[1]++, videojs.getComponent('TimeTooltip'));

	var MarkerPointTip = /*#__PURE__*/function (_Component) {
	  _inheritsLoose(MarkerPointTip, _Component);

	  function MarkerPointTip(player, options) {
	    var _this;

	    cov_1suh96wub1.f[0]++;
	    cov_1suh96wub1.s[2]++;
	    _this = _Component.call(this, player, options) || this;
	    cov_1suh96wub1.s[3]++;
	    _this.options = options;
	    cov_1suh96wub1.s[4]++;
	    _this.timeToltip = new TimeTooltip(player);
	    cov_1suh96wub1.s[5]++;

	    _this.timeToltip.hide();

	    cov_1suh96wub1.s[6]++;

	    _this.addChild(_this.timeToltip);

	    cov_1suh96wub1.s[7]++;

	    _this.addClass('vjs-marker-point-tip');

	    cov_1suh96wub1.s[8]++;
	    _this.timeToltip.el_.innerHTML = "\n      <p class=\"vjs-marker-point-tip-time\">" + videojs.formatTime(_this.options.offset, 600) + "</p>\n      <p class=\"vjs-marker-point-tip-content\">" + _this.options.data.content + "</p>\n    ";
	    return _this;
	  }

	  var _proto = MarkerPointTip.prototype;

	  _proto.updatePosition = function updatePosition() {
	    cov_1suh96wub1.f[1]++;
	    cov_1suh96wub1.s[9]++;
	    this.timeToltip.el_.style.left = "-" + this.timeToltip.el_.getBoundingClientRect().width / 2 + "px";
	  };

	  return MarkerPointTip;
	}(Component);

	var MarkerPoint = /*#__PURE__*/function (_Component2) {
	  _inheritsLoose(MarkerPoint, _Component2);

	  function MarkerPoint(player, options) {
	    var _this2;

	    cov_1suh96wub1.f[2]++;
	    cov_1suh96wub1.s[10]++;
	    _this2 = _Component2.call(this, player, options) || this;
	    cov_1suh96wub1.s[11]++;
	    _this2.offset = options.offset;
	    cov_1suh96wub1.s[12]++;
	    _this2.type = options.type;
	    cov_1suh96wub1.s[13]++;
	    _this2.data = options.data;
	    cov_1suh96wub1.s[14]++;
	    _this2.tip = new MarkerPointTip(player, {
	      data: _this2.data,
	      offset: _this2.offset
	    });
	    cov_1suh96wub1.s[15]++;
	    _this2.mouseDisplay = player.getDescendant(['ControlBar', 'ProgressControl', 'SeekBar', 'MouseTimeDisplay']);
	    cov_1suh96wub1.s[16]++;

	    _this2.addChild(_this2.tip);

	    cov_1suh96wub1.s[17]++;

	    _this2.enableTouchActivity();

	    cov_1suh96wub1.s[18]++;

	    _this2.on('mouseenter', function (ev) {
	      cov_1suh96wub1.f[3]++;
	      cov_1suh96wub1.s[19]++;

	      _this2.mouseDisplay.hide();

	      cov_1suh96wub1.s[20]++;

	      _this2.tip.timeToltip.show();

	      cov_1suh96wub1.s[21]++;

	      _this2.tip.updatePosition();
	    });

	    cov_1suh96wub1.s[22]++;

	    _this2.on('mouseleave', function (ev) {
	      cov_1suh96wub1.f[4]++;
	      cov_1suh96wub1.s[23]++;

	      _this2.mouseDisplay.show();

	      cov_1suh96wub1.s[24]++;

	      _this2.tip.timeToltip.hide();
	    });

	    return _this2;
	  }

	  var _proto2 = MarkerPoint.prototype;

	  _proto2.createEl = function createEl() {
	    cov_1suh96wub1.f[5]++;
	    cov_1suh96wub1.s[25]++;
	    return videojs.dom.createEl('div', {
	      className: 'vjs-marker-point'
	    });
	  };

	  _proto2.updatePosition = function updatePosition(duration) {
	    cov_1suh96wub1.f[6]++;
	    cov_1suh96wub1.s[26]++;
	    console.log(this.offset, duration);
	    cov_1suh96wub1.s[27]++;
	    this.el_.style.left = this.offset / duration * 100 + '%';
	  };

	  return MarkerPoint;
	}(Component);

	var cov_rjn57t5cu = function () {
	  var path = "C:\\Users\\abc13\\Projects\\marker-plugin\\src\\markerBar.js",
	      hash = '18348a5a6c6c35e095dc0080b3cbe7cf4e6afe90',
	      Function = function () {}.constructor,
	      global = new Function('return this')(),
	      gcv = '__coverage__',
	      coverageData = {
	    path: "C:\\Users\\abc13\\Projects\\marker-plugin\\src\\markerBar.js",
	    statementMap: {
	      '0': {
	        start: {
	          line: 4,
	          column: 18
	        },
	        end: {
	          line: 4,
	          column: 51
	        }
	      },
	      '1': {
	        start: {
	          line: 20,
	          column: 4
	        },
	        end: {
	          line: 22,
	          column: 5
	        }
	      },
	      '2': {
	        start: {
	          line: 21,
	          column: 6
	        },
	        end: {
	          line: 21,
	          column: 27
	        }
	      },
	      '3': {
	        start: {
	          line: 24,
	          column: 20
	        },
	        end: {
	          line: 24,
	          column: 22
	        }
	      },
	      '4': {
	        start: {
	          line: 26,
	          column: 4
	        },
	        end: {
	          line: 28,
	          column: 5
	        }
	      },
	      '5': {
	        start: {
	          line: 27,
	          column: 6
	        },
	        end: {
	          line: 27,
	          column: 64
	        }
	      },
	      '6': {
	        start: {
	          line: 30,
	          column: 4
	        },
	        end: {
	          line: 30,
	          column: 68
	        }
	      },
	      '7': {
	        start: {
	          line: 40,
	          column: 4
	        },
	        end: {
	          line: 40,
	          column: 27
	        }
	      },
	      '8': {
	        start: {
	          line: 42,
	          column: 4
	        },
	        end: {
	          line: 42,
	          column: 63
	        }
	      },
	      '9': {
	        start: {
	          line: 42,
	          column: 40
	        },
	        end: {
	          line: 42,
	          column: 61
	        }
	      },
	      '10': {
	        start: {
	          line: 44,
	          column: 29
	        },
	        end: {
	          line: 51,
	          column: 5
	        }
	      },
	      '11': {
	        start: {
	          line: 45,
	          column: 23
	        },
	        end: {
	          line: 45,
	          column: 40
	        }
	      },
	      '12': {
	        start: {
	          line: 47,
	          column: 6
	        },
	        end: {
	          line: 49,
	          column: 9
	        }
	      },
	      '13': {
	        start: {
	          line: 48,
	          column: 8
	        },
	        end: {
	          line: 48,
	          column: 40
	        }
	      },
	      '14': {
	        start: {
	          line: 50,
	          column: 6
	        },
	        end: {
	          line: 50,
	          column: 53
	        }
	      },
	      '15': {
	        start: {
	          line: 53,
	          column: 4
	        },
	        end: {
	          line: 53,
	          column: 50
	        }
	      },
	      '16': {
	        start: {
	          line: 62,
	          column: 4
	        },
	        end: {
	          line: 64,
	          column: 7
	        }
	      },
	      '17': {
	        start: {
	          line: 68,
	          column: 0
	        },
	        end: {
	          line: 68,
	          column: 50
	        }
	      }
	    },
	    fnMap: {
	      '0': {
	        name: '(anonymous_0)',
	        decl: {
	          start: {
	            line: 19,
	            column: 2
	          },
	          end: {
	            line: 19,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 19,
	            column: 32
	          },
	          end: {
	            line: 31,
	            column: 3
	          }
	        },
	        line: 19
	      },
	      '1': {
	        name: '(anonymous_1)',
	        decl: {
	          start: {
	            line: 39,
	            column: 2
	          },
	          end: {
	            line: 39,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 39,
	            column: 31
	          },
	          end: {
	            line: 54,
	            column: 3
	          }
	        },
	        line: 39
	      },
	      '2': {
	        name: '(anonymous_2)',
	        decl: {
	          start: {
	            line: 42,
	            column: 28
	          },
	          end: {
	            line: 42,
	            column: 29
	          }
	        },
	        loc: {
	          start: {
	            line: 42,
	            column: 40
	          },
	          end: {
	            line: 42,
	            column: 61
	          }
	        },
	        line: 42
	      },
	      '3': {
	        name: '(anonymous_3)',
	        decl: {
	          start: {
	            line: 44,
	            column: 29
	          },
	          end: {
	            line: 44,
	            column: 30
	          }
	        },
	        loc: {
	          start: {
	            line: 44,
	            column: 35
	          },
	          end: {
	            line: 51,
	            column: 5
	          }
	        },
	        line: 44
	      },
	      '4': {
	        name: '(anonymous_4)',
	        decl: {
	          start: {
	            line: 47,
	            column: 30
	          },
	          end: {
	            line: 47,
	            column: 31
	          }
	        },
	        loc: {
	          start: {
	            line: 47,
	            column: 42
	          },
	          end: {
	            line: 49,
	            column: 7
	          }
	        },
	        line: 47
	      },
	      '5': {
	        name: '(anonymous_5)',
	        decl: {
	          start: {
	            line: 61,
	            column: 2
	          },
	          end: {
	            line: 61,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 61,
	            column: 13
	          },
	          end: {
	            line: 65,
	            column: 3
	          }
	        },
	        line: 61
	      }
	    },
	    branchMap: {
	      '0': {
	        loc: {
	          start: {
	            line: 20,
	            column: 4
	          },
	          end: {
	            line: 22,
	            column: 5
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 20,
	            column: 4
	          },
	          end: {
	            line: 22,
	            column: 5
	          }
	        }, {
	          start: {
	            line: 20,
	            column: 4
	          },
	          end: {
	            line: 22,
	            column: 5
	          }
	        }],
	        line: 20
	      }
	    },
	    s: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0,
	      '6': 0,
	      '7': 0,
	      '8': 0,
	      '9': 0,
	      '10': 0,
	      '11': 0,
	      '12': 0,
	      '13': 0,
	      '14': 0,
	      '15': 0,
	      '16': 0,
	      '17': 0
	    },
	    f: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0
	    },
	    b: {
	      '0': [0, 0]
	    },
	    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
	  },
	      coverage = global[gcv] || (global[gcv] = {});

	  if (coverage[path] && coverage[path].hash === hash) {
	    return coverage[path];
	  }

	  coverageData.hash = hash;
	  return coverage[path] = coverageData;
	}();
	var Component$1 = (cov_rjn57t5cu.s[0]++, videojs.getComponent('Component'));

	var MarkerBar = /*#__PURE__*/function (_Component) {
	  _inheritsLoose(MarkerBar, _Component);

	  MarkerBar.build = function build(player, options) {
	    cov_rjn57t5cu.f[0]++;
	    cov_rjn57t5cu.s[1]++;

	    if (!(options.markers instanceof Array)) {
	      cov_rjn57t5cu.b[0][0]++;
	      cov_rjn57t5cu.s[2]++;
	      options.markers = [];
	    } else {
	      cov_rjn57t5cu.b[0][1]++;
	    }

	    var markers = (cov_rjn57t5cu.s[3]++, []);
	    cov_rjn57t5cu.s[4]++;

	    for (var i = options.markers.length; i--;) {
	      cov_rjn57t5cu.s[5]++;
	      markers.push(new MarkerPoint(player, options.markers[i]));
	    }

	    cov_rjn57t5cu.s[6]++;
	    return new MarkerBar(player, {
	      markers: markers,
	      barName: 'markerPoint'
	    });
	  };

	  function MarkerBar(player, options) {
	    var _this;

	    cov_rjn57t5cu.f[1]++;
	    cov_rjn57t5cu.s[7]++;
	    _this = _Component.call(this, player, options) || this;
	    cov_rjn57t5cu.s[8]++;
	    options.markers.forEach(function (marker) {
	      cov_rjn57t5cu.f[2]++;
	      cov_rjn57t5cu.s[9]++;
	      return _this.addChild(marker);
	    });
	    cov_rjn57t5cu.s[10]++;

	    var onLoadedMetaData = function onLoadedMetaData() {
	      cov_rjn57t5cu.f[3]++;
	      var duration = (cov_rjn57t5cu.s[11]++, player.duration());
	      cov_rjn57t5cu.s[12]++;
	      options.markers.forEach(function (marker) {
	        cov_rjn57t5cu.f[4]++;
	        cov_rjn57t5cu.s[13]++;
	        marker.updatePosition(duration);
	      });
	      cov_rjn57t5cu.s[14]++;
	      player.off('loadedmetadata', onLoadedMetaData);
	    };

	    cov_rjn57t5cu.s[15]++;
	    player.on('loadedmetadata', onLoadedMetaData);
	    return _this;
	  }

	  var _proto = MarkerBar.prototype;

	  _proto.createEl = function createEl() {
	    cov_rjn57t5cu.f[5]++;
	    cov_rjn57t5cu.s[16]++;
	    return videojs.dom.createEl('div', {
	      className: 'vjs-marker-bar'
	    });
	  };

	  return MarkerBar;
	}(Component$1);

	cov_rjn57t5cu.s[17]++;
	videojs.registerComponent('MarkerBar', MarkerBar);

	var version = "1.0.1";

	var cov_19l8h2rbjn = function () {
	  var path = "C:\\Users\\abc13\\Projects\\marker-plugin\\src\\MarkerPanel.js",
	      hash = '0fd428fd5607d71a19ca38725829033b4ff2e36f',
	      Function = function () {}.constructor,
	      global = new Function('return this')(),
	      gcv = '__coverage__',
	      coverageData = {
	    path: "C:\\Users\\abc13\\Projects\\marker-plugin\\src\\MarkerPanel.js",
	    statementMap: {
	      '0': {
	        start: {
	          line: 3,
	          column: 18
	        },
	        end: {
	          line: 3,
	          column: 51
	        }
	      },
	      '1': {
	        start: {
	          line: 19,
	          column: 4
	        },
	        end: {
	          line: 21,
	          column: 5
	        }
	      },
	      '2': {
	        start: {
	          line: 20,
	          column: 6
	        },
	        end: {
	          line: 20,
	          column: 27
	        }
	      },
	      '3': {
	        start: {
	          line: 23,
	          column: 4
	        },
	        end: {
	          line: 23,
	          column: 63
	        }
	      },
	      '4': {
	        start: {
	          line: 33,
	          column: 4
	        },
	        end: {
	          line: 33,
	          column: 27
	        }
	      },
	      '5': {
	        start: {
	          line: 35,
	          column: 27
	        },
	        end: {
	          line: 35,
	          column: 29
	        }
	      },
	      '6': {
	        start: {
	          line: 36,
	          column: 16
	        },
	        end: {
	          line: 36,
	          column: 38
	        }
	      },
	      '7': {
	        start: {
	          line: 38,
	          column: 4
	        },
	        end: {
	          line: 42,
	          column: 5
	        }
	      },
	      '8': {
	        start: {
	          line: 39,
	          column: 27
	        },
	        end: {
	          line: 39,
	          column: 45
	        }
	      },
	      '9': {
	        start: {
	          line: 41,
	          column: 6
	        },
	        end: {
	          line: 41,
	          column: 89
	        }
	      },
	      '10': {
	        start: {
	          line: 44,
	          column: 4
	        },
	        end: {
	          line: 44,
	          column: 109
	        }
	      },
	      '11': {
	        start: {
	          line: 46,
	          column: 4
	        },
	        end: {
	          line: 46,
	          column: 106
	        }
	      },
	      '12': {
	        start: {
	          line: 47,
	          column: 4
	        },
	        end: {
	          line: 47,
	          column: 117
	        }
	      },
	      '13': {
	        start: {
	          line: 48,
	          column: 4
	        },
	        end: {
	          line: 48,
	          column: 42
	        }
	      },
	      '14': {
	        start: {
	          line: 57,
	          column: 4
	        },
	        end: {
	          line: 59,
	          column: 7
	        }
	      },
	      '15': {
	        start: {
	          line: 70,
	          column: 20
	        },
	        end: {
	          line: 70,
	          column: 149
	        }
	      },
	      '16': {
	        start: {
	          line: 71,
	          column: 23
	        },
	        end: {
	          line: 71,
	          column: 136
	        }
	      },
	      '17': {
	        start: {
	          line: 72,
	          column: 20
	        },
	        end: {
	          line: 77,
	          column: 5
	        }
	      },
	      '18': {
	        start: {
	          line: 79,
	          column: 4
	        },
	        end: {
	          line: 83,
	          column: 14
	        }
	      },
	      '19': {
	        start: {
	          line: 80,
	          column: 18
	        },
	        end: {
	          line: 80,
	          column: 27
	        }
	      },
	      '20': {
	        start: {
	          line: 82,
	          column: 6
	        },
	        end: {
	          line: 82,
	          column: 51
	        }
	      },
	      '21': {
	        start: {
	          line: 85,
	          column: 4
	        },
	        end: {
	          line: 85,
	          column: 19
	        }
	      }
	    },
	    fnMap: {
	      '0': {
	        name: '(anonymous_0)',
	        decl: {
	          start: {
	            line: 18,
	            column: 2
	          },
	          end: {
	            line: 18,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 18,
	            column: 32
	          },
	          end: {
	            line: 24,
	            column: 3
	          }
	        },
	        line: 18
	      },
	      '1': {
	        name: '(anonymous_1)',
	        decl: {
	          start: {
	            line: 32,
	            column: 2
	          },
	          end: {
	            line: 32,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 32,
	            column: 31
	          },
	          end: {
	            line: 49,
	            column: 3
	          }
	        },
	        line: 32
	      },
	      '2': {
	        name: '(anonymous_2)',
	        decl: {
	          start: {
	            line: 56,
	            column: 2
	          },
	          end: {
	            line: 56,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 56,
	            column: 13
	          },
	          end: {
	            line: 60,
	            column: 3
	          }
	        },
	        line: 56
	      },
	      '3': {
	        name: '(anonymous_3)',
	        decl: {
	          start: {
	            line: 69,
	            column: 2
	          },
	          end: {
	            line: 69,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 69,
	            column: 33
	          },
	          end: {
	            line: 86,
	            column: 3
	          }
	        },
	        line: 69
	      },
	      '4': {
	        name: '(anonymous_4)',
	        decl: {
	          start: {
	            line: 79,
	            column: 38
	          },
	          end: {
	            line: 79,
	            column: 39
	          }
	        },
	        loc: {
	          start: {
	            line: 79,
	            column: 46
	          },
	          end: {
	            line: 83,
	            column: 5
	          }
	        },
	        line: 79
	      }
	    },
	    branchMap: {
	      '0': {
	        loc: {
	          start: {
	            line: 19,
	            column: 4
	          },
	          end: {
	            line: 21,
	            column: 5
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 19,
	            column: 4
	          },
	          end: {
	            line: 21,
	            column: 5
	          }
	        }, {
	          start: {
	            line: 19,
	            column: 4
	          },
	          end: {
	            line: 21,
	            column: 5
	          }
	        }],
	        line: 19
	      }
	    },
	    s: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0,
	      '6': 0,
	      '7': 0,
	      '8': 0,
	      '9': 0,
	      '10': 0,
	      '11': 0,
	      '12': 0,
	      '13': 0,
	      '14': 0,
	      '15': 0,
	      '16': 0,
	      '17': 0,
	      '18': 0,
	      '19': 0,
	      '20': 0,
	      '21': 0
	    },
	    f: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0
	    },
	    b: {
	      '0': [0, 0]
	    },
	    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
	  },
	      coverage = global[gcv] || (global[gcv] = {});

	  if (coverage[path] && coverage[path].hash === hash) {
	    return coverage[path];
	  }

	  coverageData.hash = hash;
	  return coverage[path] = coverageData;
	}();
	var Component$2 = (cov_19l8h2rbjn.s[0]++, videojs.getComponent('Component'));

	var MarkerPanel = /*#__PURE__*/function (_Component) {
	  _inheritsLoose(MarkerPanel, _Component);

	  MarkerPanel.build = function build(player, options) {
	    cov_19l8h2rbjn.f[0]++;
	    cov_19l8h2rbjn.s[1]++;

	    if (!(options.markers instanceof Array)) {
	      cov_19l8h2rbjn.b[0][0]++;
	      cov_19l8h2rbjn.s[2]++;
	      options.markers = [];
	    } else {
	      cov_19l8h2rbjn.b[0][1]++;
	    }

	    cov_19l8h2rbjn.s[3]++;
	    return new MarkerPanel(player, {
	      markers: options.markers
	    });
	  };

	  function MarkerPanel(player, options) {
	    var _this;

	    cov_19l8h2rbjn.f[1]++;
	    cov_19l8h2rbjn.s[4]++;
	    _this = _Component.call(this, player, options) || this;
	    var markerItemList = (cov_19l8h2rbjn.s[5]++, []);
	    var len = (cov_19l8h2rbjn.s[6]++, options.markers.length);
	    cov_19l8h2rbjn.s[7]++;

	    for (var i = 0; i < len; i++) {
	      var markerOption = (cov_19l8h2rbjn.s[8]++, options.markers[i]);
	      cov_19l8h2rbjn.s[9]++;
	      markerItemList.push(_this.createMarkerItem(markerOption.offset, markerOption.data));
	    }

	    cov_19l8h2rbjn.s[10]++;
	    _this.markerList = videojs.dom.createEl('div', {
	      className: 'vjs-markers-panel-list'
	    }, {}, markerItemList);
	    cov_19l8h2rbjn.s[11]++;

	    _this.el_.appendChild(videojs.dom.createEl('div', {
	      className: 'vjs-markers-panel-title'
	    }, {}, '打点记录'));

	    cov_19l8h2rbjn.s[12]++;

	    _this.el_.appendChild(videojs.dom.createEl('div', {
	      className: 'vjs-markers-panel-subtitle'
	    }, {}, '点击快速跳转至视频打点处'));

	    cov_19l8h2rbjn.s[13]++;

	    _this.el_.appendChild(_this.markerList);

	    return _this;
	  }

	  var _proto = MarkerPanel.prototype;

	  _proto.createEl = function createEl() {
	    cov_19l8h2rbjn.f[2]++;
	    cov_19l8h2rbjn.s[14]++;
	    return videojs.dom.createEl('div', {
	      className: 'vjs-markers-panel'
	    });
	  };

	  _proto.createMarkerItem = function createMarkerItem(offset, data) {
	    var _this2 = this;

	    cov_19l8h2rbjn.f[3]++;
	    var timeDOM = (cov_19l8h2rbjn.s[15]++, videojs.dom.createEl('div', {
	      className: 'vjs-markers-panel-item-time'
	    }, {
	      'data-offset': offset
	    }, videojs.formatTime(offset, 600)));
	    var contentDOM = (cov_19l8h2rbjn.s[16]++, videojs.dom.createEl('div', {
	      className: 'vjs-markers-panel-item-content'
	    }, {
	      'data-offset': offset
	    }, data.content));
	    var itemDOM = (cov_19l8h2rbjn.s[17]++, videojs.dom.createEl('div', {
	      className: 'vjs-markers-panel-list-item'
	    }, {
	      'data-offset': offset
	    }, [timeDOM, contentDOM]));
	    cov_19l8h2rbjn.s[18]++;
	    itemDOM.addEventListener('click', function (ev) {
	      cov_19l8h2rbjn.f[4]++;
	      var dom = (cov_19l8h2rbjn.s[19]++, ev.target);
	      cov_19l8h2rbjn.s[20]++;

	      _this2.player_.currentTime(dom.dataset.offset);
	    }, false);
	    cov_19l8h2rbjn.s[21]++;
	    return itemDOM;
	  };

	  return MarkerPanel;
	}(Component$2);

	var cov_1q0wmp2xt3 = function () {
	  var path = "C:\\Users\\abc13\\Projects\\marker-plugin\\src\\plugin.js",
	      hash = '528281fc6d4963147c8ce3459a022099b01563ae',
	      Function = function () {}.constructor,
	      global = new Function('return this')(),
	      gcv = '__coverage__',
	      coverageData = {
	    path: "C:\\Users\\abc13\\Projects\\marker-plugin\\src\\plugin.js",
	    statementMap: {
	      '0': {
	        start: {
	          line: 6,
	          column: 15
	        },
	        end: {
	          line: 6,
	          column: 42
	        }
	      },
	      '1': {
	        start: {
	          line: 9,
	          column: 17
	        },
	        end: {
	          line: 9,
	          column: 19
	        }
	      },
	      '2': {
	        start: {
	          line: 33,
	          column: 4
	        },
	        end: {
	          line: 33,
	          column: 18
	        }
	      },
	      '3': {
	        start: {
	          line: 35,
	          column: 4
	        },
	        end: {
	          line: 35,
	          column: 59
	        }
	      },
	      '4': {
	        start: {
	          line: 37,
	          column: 4
	        },
	        end: {
	          line: 37,
	          column: 46
	        }
	      },
	      '5': {
	        start: {
	          line: 39,
	          column: 4
	        },
	        end: {
	          line: 39,
	          column: 25
	        }
	      },
	      '6': {
	        start: {
	          line: 48,
	          column: 4
	        },
	        end: {
	          line: 50,
	          column: 7
	        }
	      },
	      '7': {
	        start: {
	          line: 51,
	          column: 4
	        },
	        end: {
	          line: 51,
	          column: 26
	        }
	      },
	      '8': {
	        start: {
	          line: 60,
	          column: 4
	        },
	        end: {
	          line: 62,
	          column: 7
	        }
	      },
	      '9': {
	        start: {
	          line: 63,
	          column: 4
	        },
	        end: {
	          line: 63,
	          column: 28
	        }
	      },
	      '10': {
	        start: {
	          line: 67,
	          column: 4
	        },
	        end: {
	          line: 67,
	          column: 63
	        }
	      },
	      '11': {
	        start: {
	          line: 69,
	          column: 4
	        },
	        end: {
	          line: 69,
	          column: 49
	        }
	      },
	      '12': {
	        start: {
	          line: 69,
	          column: 24
	        },
	        end: {
	          line: 69,
	          column: 49
	        }
	      },
	      '13': {
	        start: {
	          line: 70,
	          column: 4
	        },
	        end: {
	          line: 70,
	          column: 53
	        }
	      },
	      '14': {
	        start: {
	          line: 70,
	          column: 26
	        },
	        end: {
	          line: 70,
	          column: 53
	        }
	      },
	      '15': {
	        start: {
	          line: 72,
	          column: 4
	        },
	        end: {
	          line: 74,
	          column: 5
	        }
	      },
	      '16': {
	        start: {
	          line: 73,
	          column: 6
	        },
	        end: {
	          line: 73,
	          column: 54
	        }
	      },
	      '17': {
	        start: {
	          line: 76,
	          column: 22
	        },
	        end: {
	          line: 76,
	          column: 93
	        }
	      },
	      '18': {
	        start: {
	          line: 77,
	          column: 4
	        },
	        end: {
	          line: 77,
	          column: 26
	        }
	      },
	      '19': {
	        start: {
	          line: 79,
	          column: 4
	        },
	        end: {
	          line: 79,
	          column: 39
	        }
	      },
	      '20': {
	        start: {
	          line: 84,
	          column: 0
	        },
	        end: {
	          line: 84,
	          column: 31
	        }
	      },
	      '21': {
	        start: {
	          line: 87,
	          column: 0
	        },
	        end: {
	          line: 87,
	          column: 31
	        }
	      },
	      '22': {
	        start: {
	          line: 90,
	          column: 0
	        },
	        end: {
	          line: 90,
	          column: 53
	        }
	      }
	    },
	    fnMap: {
	      '0': {
	        name: '(anonymous_0)',
	        decl: {
	          start: {
	            line: 31,
	            column: 2
	          },
	          end: {
	            line: 31,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 31,
	            column: 31
	          },
	          end: {
	            line: 40,
	            column: 3
	          }
	        },
	        line: 31
	      },
	      '1': {
	        name: '(anonymous_1)',
	        decl: {
	          start: {
	            line: 47,
	            column: 2
	          },
	          end: {
	            line: 47,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 47,
	            column: 20
	          },
	          end: {
	            line: 52,
	            column: 3
	          }
	        },
	        line: 47
	      },
	      '2': {
	        name: '(anonymous_2)',
	        decl: {
	          start: {
	            line: 59,
	            column: 2
	          },
	          end: {
	            line: 59,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 59,
	            column: 23
	          },
	          end: {
	            line: 64,
	            column: 3
	          }
	        },
	        line: 59
	      },
	      '3': {
	        name: '(anonymous_3)',
	        decl: {
	          start: {
	            line: 66,
	            column: 2
	          },
	          end: {
	            line: 66,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 66,
	            column: 25
	          },
	          end: {
	            line: 80,
	            column: 3
	          }
	        },
	        line: 66
	      }
	    },
	    branchMap: {
	      '0': {
	        loc: {
	          start: {
	            line: 69,
	            column: 4
	          },
	          end: {
	            line: 69,
	            column: 49
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 69,
	            column: 4
	          },
	          end: {
	            line: 69,
	            column: 49
	          }
	        }, {
	          start: {
	            line: 69,
	            column: 4
	          },
	          end: {
	            line: 69,
	            column: 49
	          }
	        }],
	        line: 69
	      },
	      '1': {
	        loc: {
	          start: {
	            line: 70,
	            column: 4
	          },
	          end: {
	            line: 70,
	            column: 53
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 70,
	            column: 4
	          },
	          end: {
	            line: 70,
	            column: 53
	          }
	        }, {
	          start: {
	            line: 70,
	            column: 4
	          },
	          end: {
	            line: 70,
	            column: 53
	          }
	        }],
	        line: 70
	      },
	      '2': {
	        loc: {
	          start: {
	            line: 72,
	            column: 4
	          },
	          end: {
	            line: 74,
	            column: 5
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 72,
	            column: 4
	          },
	          end: {
	            line: 74,
	            column: 5
	          }
	        }, {
	          start: {
	            line: 72,
	            column: 4
	          },
	          end: {
	            line: 74,
	            column: 5
	          }
	        }],
	        line: 72
	      }
	    },
	    s: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0,
	      '6': 0,
	      '7': 0,
	      '8': 0,
	      '9': 0,
	      '10': 0,
	      '11': 0,
	      '12': 0,
	      '13': 0,
	      '14': 0,
	      '15': 0,
	      '16': 0,
	      '17': 0,
	      '18': 0,
	      '19': 0,
	      '20': 0,
	      '21': 0,
	      '22': 0
	    },
	    f: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0
	    },
	    b: {
	      '0': [0, 0],
	      '1': [0, 0],
	      '2': [0, 0]
	    },
	    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
	  },
	      coverage = global[gcv] || (global[gcv] = {});

	  if (coverage[path] && coverage[path].hash === hash) {
	    return coverage[path];
	  }

	  coverageData.hash = hash;
	  return coverage[path] = coverageData;
	}();
	var Plugin = (cov_1q0wmp2xt3.s[0]++, videojs.getPlugin('plugin'));
	var defaults = (cov_1q0wmp2xt3.s[1]++, {});

	var MarkerPlugin = /*#__PURE__*/function (_Plugin) {
	  _inheritsLoose(MarkerPlugin, _Plugin);

	  function MarkerPlugin(player, options) {
	    var _this;

	    cov_1q0wmp2xt3.f[0]++;
	    cov_1q0wmp2xt3.s[2]++;
	    _this = _Plugin.call(this, player) || this;
	    cov_1q0wmp2xt3.s[3]++;
	    _this.options = videojs.mergeOptions(defaults, options);
	    cov_1q0wmp2xt3.s[4]++;

	    _this.player.addClass('vjs-marker-plugin');

	    cov_1q0wmp2xt3.s[5]++;

	    _this.updateOptions();

	    return _this;
	  }

	  var _proto = MarkerPlugin.prototype;

	  _proto.createMarkerBar = function createMarkerBar() {
	    cov_1q0wmp2xt3.f[1]++;
	    cov_1q0wmp2xt3.s[6]++;
	    this.markerBar = MarkerBar.build(this.player, {
	      markers: this.options.markers
	    });
	    cov_1q0wmp2xt3.s[7]++;
	    return this.markerBar;
	  };

	  _proto.createMarkersPanel = function createMarkersPanel() {
	    cov_1q0wmp2xt3.f[2]++;
	    cov_1q0wmp2xt3.s[8]++;
	    this.markerPanel = MarkerPanel.build(this.player, {
	      markers: this.options.markers
	    });
	    cov_1q0wmp2xt3.s[9]++;
	    return this.markerPanel;
	  };

	  _proto.updateOptions = function updateOptions(options) {
	    cov_1q0wmp2xt3.f[3]++;
	    cov_1q0wmp2xt3.s[10]++;
	    this.options = videojs.mergeOptions(this.options, options);
	    cov_1q0wmp2xt3.s[11]++;

	    if (this.markerBar) {
	      cov_1q0wmp2xt3.b[0][0]++;
	      cov_1q0wmp2xt3.s[12]++;
	      this.markerBar.dispose();
	    } else {
	      cov_1q0wmp2xt3.b[0][1]++;
	    }

	    cov_1q0wmp2xt3.s[13]++;

	    if (this.markerPanel) {
	      cov_1q0wmp2xt3.b[1][0]++;
	      cov_1q0wmp2xt3.s[14]++;
	      this.markerPanel.dispose();
	    } else {
	      cov_1q0wmp2xt3.b[1][1]++;
	    }

	    cov_1q0wmp2xt3.s[15]++;

	    if (!(this.options.panel === false)) {
	      cov_1q0wmp2xt3.b[2][0]++;
	      cov_1q0wmp2xt3.s[16]++;
	      this.player.addChild(this.createMarkersPanel());
	    } else {
	      cov_1q0wmp2xt3.b[2][1]++;
	    }

	    var container = (cov_1q0wmp2xt3.s[17]++, this.player.getDescendant(['ControlBar', 'ProgressControl', 'SeekBar']));
	    cov_1q0wmp2xt3.s[18]++;
	    this.createMarkerBar();
	    cov_1q0wmp2xt3.s[19]++;
	    container.addChild(this.markerBar);
	  };

	  return MarkerPlugin;
	}(Plugin);

	cov_1q0wmp2xt3.s[20]++;
	MarkerPlugin.defaultState = {};
	cov_1q0wmp2xt3.s[21]++;
	MarkerPlugin.VERSION = version;
	cov_1q0wmp2xt3.s[22]++;
	videojs.registerPlugin('markerPlugin', MarkerPlugin);

	var Player = videojs.getComponent('Player');
	QUnit.test('the environment is sane', function (assert) {
	  assert.strictEqual(typeof Array.isArray, 'function', 'es5 exists');
	  assert.strictEqual(typeof sinon, 'object', 'sinon exists');
	  assert.strictEqual(typeof videojs, 'function', 'videojs exists');
	  assert.strictEqual(typeof MarkerPlugin, 'function', 'plugin is a function');
	});
	QUnit.module('videojs-marker-plugin', {
	  beforeEach: function beforeEach() {
	    // Mock the environment's timers because certain things - particularly
	    // player readiness - are asynchronous in video.js 5. This MUST come
	    // before any player is created; otherwise, timers could get created
	    // with the actual timer methods!
	    this.clock = sinon.useFakeTimers();
	    this.fixture = document_1.getElementById('qunit-fixture');
	    this.video = document_1.createElement('video');
	    this.fixture.appendChild(this.video);
	    this.player = videojs(this.video);
	  },
	  afterEach: function afterEach() {
	    this.player.dispose();
	    this.clock.restore();
	  }
	});
	QUnit.test('registers itself with video.js', function (assert) {
	  assert.expect(2);
	  assert.strictEqual(typeof Player.prototype.markerPlugin, 'function', 'videojs-marker-plugin plugin was registered');
	  this.player.markerPlugin(); // Tick the clock forward enough to trigger the player to be "ready".

	  this.clock.tick(1);
	  assert.ok(this.player.hasClass('vjs-marker-plugin'), 'the plugin adds a class to the player');
	});

}(QUnit, sinon, videojs));
